{"version":3,"sources":["Components/WeatherData/Styles.module.css","Components/Form/Styles.module.css","Components/CityList/Styles.module.css","Actions/index.js","Components/WeatherData/index.jsx","Components/Form/index.jsx","Components/CityList/index.jsx","Components/WeatherDataDetails/index.jsx","App.js","Redusers/index.js","Store/index.js","middleware/index.js","index.js"],"names":["module","exports","getData","data","dispatch","fetch","title","then","response","json","error","console","log","type","payload","getStoreData","WeatherData","connect","state","weather","lastData","name","country","props","Math","round","className","styles","list","item","ConnectedForm","handleChange","bind","handleSubmit","event","this","setState","target","id","value","preventDefault","cityName","includes","onSubmit","container","onChange","input","button","Component","Form","weatherData","cityWeather","CityListView","getDataFromStore","weatherDataName","map","key","onClick","CityList","to","App","initialState","rootReducer","action","main","temp","sys","concat","indexOf","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30089768.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Styles_list__1_7di\",\"item\":\"Styles_item__14x4c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Styles_input__1ljF_\",\"container\":\"Styles_container__2r0YJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Styles_list__10qBG\",\"item\":\"Styles_item__1imGj\"};","import { compose } from \"redux\";\n\nexport const GET_STORE_DATA = \"GET_STORE_DATA\";\nexport const GET_DATA = \"GET_DATA\";\n\nexport const API_KAY = `6627805f240aca84b4a726d2429a3208`;\n\n// export function addArticle(payload) {\n//   return { type: ADD_CITY, payload };\n// }\n\nexport function getData(data) {\n  return function (dispatch) {\n    return fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${data.title}&units=metric&appid=${API_KAY}`\n    )\n      .then(\n        (response) => response.json(),\n        (error) => console.log(\"An error occured.\", error)\n      )\n      .then((json) => {\n        dispatch({\n          type: GET_DATA,\n          payload: json,\n        });\n      });\n  };\n}\n\nexport function getStoreData(data) {\n  return function (dispatch) {\n    dispatch({\n      type: GET_STORE_DATA,\n      payload: data,\n    });\n  };\n}\n","import React from \"react\";\nimport { getData, getStoreData } from \"../../Actions/index\";\nimport { connect } from \"react-redux\";\n\nimport styles from \"./Styles.module.css\";\n\nfunction WeatherDataView(props) {\n  const weather = `${Math.round(props.weather)}`;\n\n  return (\n    <div className={styles.list}>\n      <div className={styles.item}>{weather == 0 ? \"\" : `${weather}ÂºC`} </div>\n      <div className={styles.item}> {props.name}</div>\n      <div className={styles.item}> {props.country}</div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    weather: state.lastData.weather ? state.lastData.weather : \"\",\n    name: state.lastData.name ? state.lastData.name : \"\",\n    country: state.lastData.country ? state.lastData.country : \"\",\n  };\n};\n\nconst WeatherData = connect(mapStateToProps, { getData, getStoreData })(\n  WeatherDataView\n);\n\nexport default WeatherData;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getData, getStoreData } from \"../../Actions\";\nimport styles from './Styles.module.css'\n\nclass ConnectedForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const { title } = this.state;\n    if (!this.props.cityName.includes(title)) {\n      this.props.getData({ title });\n    } else {\n      this.props.getStoreData({ title });\n    }\n\n    this.setState({ title: \"\" });\n  }\n  render() {\n    const { title } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className={styles.container}>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={title}\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n          <button className={styles.button} type=\"submit\">SAVE</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cityName: state.weatherData.name,\n    cityWeather: state.weatherData.weather,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getData: (data) => dispatch(getData(data)),\n    getStoreData: (data) => dispatch(getStoreData(data)),\n  };\n}\n\nconst Form = connect(mapStateToProps, mapDispatchToProps)(ConnectedForm);\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getStoreData } from \"../../Actions\";\n\nimport styles from \"./Styles.module.css\";\n\nclass CityListView extends Component {\n  constructor(props) {\n    super(props);\n    this.getDataFromStore = this.getDataFromStore.bind(this);\n  }\n\n  getDataFromStore(title) {\n    this.props.getStoreData({ title });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={styles.list}>\n          {this.props.weatherDataName.map((item) => (\n            <p\n              key={item}\n              className={styles.item}\n              onClick={() => this.getDataFromStore(item)}\n            >\n              {item}\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getStoreData: (data) => dispatch(getStoreData(data)),\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    weatherDataName: state.weatherData.name ? state.weatherData.name : \"\",\n  };\n};\n\nconst CityList = connect(mapStateToProps, mapDispatchToProps)(CityListView);\nexport default CityList;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getData } from \"../../Actions/index\";\n\nconst DetailsPage = (props) => {\n  const dateBuilder = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year} `;\n  };\n\n  return (\n    <div>\n      <Link to=\"/\">Go to back</Link>\n      {this.props.weather}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    weather: state.lastData.weather ? state.lastData.weather : \"\",\n    name: state.lastData.name ? state.lastData.name : \"\",\n    country: state.lastData.country ? state.lastData.country : \"\",\n  };\n};\nconst Details = connect(mapStateToProps, { getData })(DetailsPage);\n\nexport default Details;\n","import React from \"react\";\nimport {Switch, Route } from \"react-router-dom\";\nimport WeatherData from \"./Components/WeatherData\";\nimport Form from \"./Components/Form\";\nimport CityList from \"./Components/CityList\";\nimport DetailsPage from \"./Components/WeatherDataDetails\";\nimport './index.css'\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"box\">\n        <h2>Sinoptik</h2>\n        <Form />\n        <CityList/>\n        <WeatherData />\n          {/* <Route path=\"/\" exact  component={}></Route>\n          <Route path=\"/Berlin\" component={DetailsPage} /> */}\n      \n      </div>\n    </div>\n  );\n}\n\n \nexport default App;\n","import { GET_DATA, GET_STORE_DATA } from \"../Actions\";\n\nconst initialState = {\n  data: {\n    lastData: {\n      id: [],\n      name: [],\n      country: [],\n      weather: [],\n    },\n    weatherData: {\n      id: [],\n      name: [],\n      country: [],\n      weather: [],\n    },\n  },\n};\n\nfunction rootReducer(state = initialState.data, action) {\n  switch (action.type) {\n    case GET_DATA:\n      return {\n        ...state,\n        lastData: {\n          ...state.weatherData,\n          name: action.payload.name,\n          id: action.payload.id,\n          weather: action.payload.main.temp,\n          country: action.payload.sys.country,\n        },\n        weatherData: {\n          ...state.weatherData,\n          name: state.weatherData.name.concat(action.payload.name),\n          id: state.weatherData.id.concat(action.payload.id),\n          weather: state.weatherData.weather.concat(action.payload.main.temp),\n          country: state.weatherData.country.concat(action.payload.sys.country),\n        },\n      };\n    case GET_STORE_DATA:\n      return {\n        ...state,\n        lastData: {\n          ...state.weatherData,\n          name: action.payload.title,\n          weather:\n            state.weatherData.weather[\n              state.weatherData.name.indexOf(action.payload.title)\n            ],\n          country:\n            state.weatherData.country[\n              state.weatherData.name.indexOf(action.payload.title)\n            ],\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { forbiddenWordsMiddleware } from \"../middleware\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../Redusers\";\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(forbiddenWordsMiddleware, thunk))\n);\n// const unsubscribe = store.subscribe(() => console.log(store.getState()));\n\nexport default store;\n","export function forbiddenWordsMiddleware({ dispatch }){\n    return function(next){\n        return function(action){\n            return next(action);\n        }\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}